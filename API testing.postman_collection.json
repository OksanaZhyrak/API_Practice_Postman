{
	"info": {
		"_postman_id": "5fca9917-4e1a-4221-8fae-89792b726194",
		"name": "API testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23433532"
	},
	"item": [
		{
			"name": "Get all employee data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response=JSON.parse(responseBody);\r",
							"\r",
							"pm.environment.set(\"id\", response.data[6].id);\r",
							"\r",
							"pm.test(\"Body matches string where\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Oksana\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/employees",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a single employee data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/employee/{{id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"employee",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new record in database",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"        \"definitions\": {\r",
							"        \"Welcome1\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"status\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"data\": {\r",
							"                    \"$ref\": \"#/definitions/Data\"\r",
							"                },\r",
							"                \"message\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"data\",\r",
							"                \"message\",\r",
							"                \"status\"\r",
							"            ],\r",
							"            \"title\": \"Welcome1\"\r",
							"        },\r",
							"        \"Data\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"name\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"salary\": {\r",
							"                    \"type\": \"string\",\r",
							"                    \"format\": \"integer\"\r",
							"                },\r",
							"                \"age\": {\r",
							"                    \"type\": \"string\",\r",
							"                    \"format\": \"integer\"\r",
							"                },\r",
							"                \"id\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"age\",\r",
							"                \"id\",\r",
							"                \"name\",\r",
							"                \"salary\"\r",
							"            ],\r",
							"            \"title\": \"Data\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.test(\"validation Json Schema\", ()=>{\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"})\r",
							"\r",
							"var response=JSON.parse(responseBody);\r",
							"\r",
							"pm.environment.set(\"id\", response.data.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{name}}\",\r\n    \"salary\":\"{{salary}}\",\r\n    \"age\":\"{{age}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a single employee data Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/employee/{{id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"employee",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an employee record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{newName}}\",\r\n    \"salary\":\"{{newsalary}}\",\r\n    \"age\":\"{{newAge}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/update/{{id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"update",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an employee record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that user was deleted\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Record has been deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/delete/{{id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}